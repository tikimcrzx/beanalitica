import { LoggerService, Provider } from '@nestjs/common';
import { Logger } from 'winston';
import { WinstonModuleAsyncOptions, WinstonModuleOptions } from './winston.interfaces';
declare class WinstonLogger implements LoggerService {
    private readonly logger;
    constructor(logger: Logger);
    log(message: any, context?: string): Logger;
    error(message: any, trace?: string, context?: string): any;
    warn(message: any, context?: string): any;
    debug?(message: any, context?: string): any;
    verbose?(message: any, context?: string): any;
}
export declare function createNestWinstonLogger(loggerOpts: WinstonModuleOptions): WinstonLogger;
export declare function createWinstonProviders(loggerOpts: WinstonModuleOptions): Provider[];
export declare function createWinstonAsyncProviders(options: WinstonModuleAsyncOptions): Provider[];
export {};
